package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"
	"graphql-ozon/graph/model"
	"strconv"
)

// CreatePost is the resolver for the createPost field.
func (r *mutationResolver) CreatePost(ctx context.Context, title string, content string) (*model.Post, error) {
	id := strconv.Itoa(len(r.Posts) + 1)
	post := &model.Post{
		ID:      id,
		Title:   title,
		Content: content,
	}
	r.Posts = append(r.Posts, post)
	return post, nil
}

// AllPosts is the resolver for the allPosts field.
func (r *queryResolver) AllPosts(ctx context.Context) ([]*model.Post, error) {
	return r.Posts, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
